---
title: Social Hotspot Analysis and Visualization
subtitle: Patterns & Trends in Environmental Data / Computational Movement Analysis Geo 880 --- Semesterproject FS23
author: 
  - name: Aiyana Signer 
    affiliation:
      - name: University of Zurich
  - name: Diego Gomes
    affiliation:
      - name: University of Zurich
date: 07.02.2023
date-format: long
format: html
editor: visual
jupyter: python3
---

## Abstract

The aim of this project is to identify and characterize social hotspots, locations where people spend time in close proximity at the same time. As such, we investigate and operationalise the spatio-temporal clustering of individuals to uncover patterns of social interaction. A raster-based approach using a hexagonal grid and a point-based approach using a kernel density estimation (KDE) are compared. For the analysis, we use tracking data gathered with the posmo app from a group of students in the Computational Movement Analysis class.

## Introduction and Research Questions

In regards to terminology, a visit refers to a location where an individual spends a certain amount of time. A hotspot is a place with numerous visits, while a social hotspot also takes into account that the visits occur in the same time period.

Analysing social hotspots can provide valuable insights into how people gather, socialize, and engage with their surroundings. Attributes such as average duration, total time spent and the number of visits can be used to measure how popular a gathering spot is. In urban planning, this can be used to help set priorities for public investments in infrastructure (e.g., Kucukpehlivan et al., 2023). In the field of health sciences, hotspot analysis can be used to identify first outbreaks of diseases (Jones et al., 2008) to be used in emergency response planning.

In this project, we compare two different methods to identify hotspots, a raster-based and a point-based approach. Both methods implement an approach to first compute the visits and locations for an individual. This is then further generalized to compute the union and intersection of visits. As such, we try to answer the following research questions:

1.  How can individual hotspot detection from Posmo Tracking data be operationalized and applied to multiple individuals?

2.  How does a cell-based vs. point-based method impact the semantics and certainty of our analysis?

## Methods

<!-- Maybe we can also remove this, since it is partly already described in the introduction!-->

For both the raster-based and the point-based method, we first compute visits of an individual, i.e. locations that a person has spent a certain amount of time. Depending on the modeled environment, location is defined differently. For the raster-based approach, the environment is divided into individual cells, and a a visit is modeled as an individual spending a certain amount of time within a cell. On the other hand, the point-based approach uses a moving centroid to check whether a point is close enough to still be a part of that visit. In both cases, visits that fall below a given threshold time will be considered as a person being in transit, and hence not interpreted as a visit at that location.

The next step is to compute meeting points of multiple individuals, which we operationalised as the union or intersection of visits. For the raster-based approach, near each other means being in the same raster cell. For the point-based approach, a buffer with a certain distance threshold is created around each visit creating a polygon for each visit. The intersection then computes any intersection of the polygons.

## Results

```{python}
# import code from .py files
from raster_based_hotspots import RasterBasedPerson, RasterBasedUnionGroup, RasterBasedIntersectGroup
from point_based_hotspots import PointBasedPerson, PointBasedUnionGroup, PointBasedIntersectGroup
```

```{python}
# create instance and read in data of an individual for raster-and point-based approach
raster_based_person = RasterBasedPerson.from_csv(f'data/posmo2.csv', 8)
point_based_person = PointBasedPerson.from_csv(f'data/posmo2.csv', 0.5314)
```

```{python}
# map raster locations based on how often a location was visited
raster_based_person.map_locations(column='num_visits')
```

```{python}
# heatmap of locations based on how often a location was visited
point_based_person.map_locations(column='num_visits')
```

```{python}
# instantiate the union class for the raster- and point-based approach
raster_based_union_group = RasterBasedUnionGroup()
point_based_union_group = PointBasedUnionGroup()

# instantiate the intersection class for the raster- and point-based approach
raster_based_intersection_group = RasterBasedIntersectGroup()
point_based_intersection_group = PointBasedIntersectGroup()
```

```{python}
# loop through all individuals 
for i in range(9):
    # instantiate raster- and point-based person
    raster_based_person = RasterBasedPerson.from_csv(f'data/posmo{i}.csv', 8)
    point_based_person = PointBasedPerson.from_csv(f'data/posmo{i}.csv', 0.5314)
    
    # add the person instance to the union group
    raster_based_union_group.add_person(raster_based_person)
    point_based_union_group.add_person(point_based_person)
    
    # add the person instance to the intersection group
    raster_based_intersection_group.add_person(raster_based_person)
    point_based_intersection_group.add_person(point_based_person)
    
    print(f'Finished loading Person {i}')
```

```{python}
# compute visits for union groups
raster_based_union_group.compute_visits()
point_based_union_group.compute_visits()

# compute visits where ate least 2 people are present for intersection groups
raster_based_intersection_group.compute_visits(n_min=2)
point_based_intersection_group.compute_visits(n_min=2)
```

```{python}
# map locations of union group from raster-based approached
raster_based_union_group.map_locations(column='num_visits')
```

```{python}
# heatmap of union group from point-based approached
point_based_union_group.map_locations(column='num_visits')
```

```{python}
raster_based_intersection_group.map_locations(column='num_visits')
```

```{python}
point_based_intersection_group.map_locations(column='num_visits')
```

## Discussion

<!-- the following is just a placeholder text, remove it!-->

## Literature

Jones, K., Patel, N., Levy, M. et al. (2008). Global trends in emerging infectious diseases. Nature 451, 990--993.

Kucukpehlivan, T., Cetin, M., Aksoy, T., Senyel Kurkcuoglu, M. A., Cabuk, S. N., Isik Pekkan, O., Dabanli, A., & Cabuk, A. (2023). Determination of the impacts of urban-planning of the urban land area using GIS hotspot analysis. Computers and Electronics in Agriculture, 210, 107935.

```{Python}
#devtools::install_github("benmarwick/wordcountaddin",  type = "source", dependencies = TRUE)
wordcountaddin:::text_stats()
```
